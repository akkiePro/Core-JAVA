Functional Interface :
- Lambda expression provides implementation of functional interface. An interface which has only one abstract method is called functional interface. Java provides an anotation @FunctionalInterface, which is used to declare an interface as functional interface.

Why use Lambda Expression ?
1. To provide the implementation of Functional interface.
2. Less coding.

# Java Lambda Expression Syntax
(argument-list) -> {body} 

Java lambda expression is consisted of three components.
1) Argument-list: It can be empty or non-empty as well.
2) Arrow-token: It is used to link arguments-list and body of expression.
3) Body: It contains expressions and statements for lambda expression.

# No Parameter Syntax
() -> {  
//Body of no parameter lambda  
}  

# One Parameter Syntax
(p1) -> {  
//Body of single parameter lambda  
}  

# Two Parameter Syntax
(p1,p2) -> {  
//Body of multiple parameter lambda  
}  